
-- SQL SCRIPT TO CREATE AND POPULATE THE ZONES TABLE
-- Drop the table if it already exists to ensure a clean slate
DROP TABLE IF EXISTS "00_lbp_zones";

-- Create the table to store zone information
-- Using the GEOGRAPHY type is optimal for storing latitude/longitude data
CREATE TABLE "00_lbp_zones" (
    zone_id SERIAL PRIMARY KEY,
    zone_name VARCHAR(255) NOT NULL,
    zone_polygon GEOGRAPHY(POLYGON, 4326) NOT NULL -- 4326 is the SRID for WGS 84
);

-- Insert the zone definitions into the table
INSERT INTO "00_lbp_zones" (zone_name, zone_polygon) VALUES
('Crusher', ST_GeogFromText('POLYGON((-97.8302154 33.2580123, -97.8301054 33.2578261, -97.8299310 33.2579001, -97.8300786 33.2580796, -97.8302180 33.2580190, -97.8302154 33.2580123))')),
('Stockpile 1', ST_GeogFromText('POLYGON((-97.8301483 33.2583240, -97.8299498 33.2579540, -97.8294402 33.2581267, -97.8291729 33.2590222, -97.8293744 33.2596088, -97.8297365 33.2593307, -97.8301529 33.2583203, -97.8301483 33.2583240))')),
('Stockpile 2', ST_GeogFromText('POLYGON((-97.8300501 33.2605270, -97.8297765 33.2599618, -97.8294948 33.2600986, -97.8292749 33.2605584, -97.8297255 33.2607356, -97.8300501 33.2605247, -97.8300501 33.2605270))')),
('Stockpile 3', ST_GeogFromText('POLYGON((-97.8277426 33.2419613, -97.8276353 33.2411806, -97.8269916 33.2404538, -97.8264122 33.2410281, -97.8263157 33.2415171, -97.8266322 33.2417863, -97.8277372 33.2419613, -97.8277426 33.2419613))')),
('Pit 1', ST_GeogFromText('POLYGON((-97.8406601 33.2732661, -97.8406708 33.2708980, -97.8354781 33.2709428, -97.8358321 33.2734634, -97.8406601 33.2732661))')),
('Pit 2', ST_GeogFromText('POLYGON((-97.8365509 33.2763763, -97.8364115 33.2737571, -97.8321092 33.2738737, -97.8322487 33.2759726, -97.8365509 33.2763763))')),
('Pit 3', ST_GeogFromText('POLYGON((-97.8350793 33.2736128, -97.8343498 33.2700068, -97.8326761 33.2700516, -97.8323435 33.2736845, -97.8350793 33.2736128))'));

-- Grant permissions to the application user
GRANT SELECT ON "00_lbp_zones" TO ahs_user;

-- Verify the insertion
SELECT zone_name, ST_AsText(zone_polygon) as polygon_wkt FROM "00_lbp_zones";
