name: Code Quality & Security Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort bandit safety pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Code formatting check (Black)
      run: black --check --diff .
      continue-on-error: true
    
    - name: Import sorting check (isort)
      run: isort --check-only --diff .
      continue-on-error: true
    
    - name: Linting (flake8)
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true
    
    - name: Security analysis (Bandit)
      run: bandit -r . -f json -o bandit-report.json || true
      continue-on-error: true
    
    - name: Dependency security check (Safety)
      run: safety check --json --output safety-report.json || true
      continue-on-error: true
    
    - name: Code complexity (Pylint)
      run: pylint --output-format=json --reports=no **/*.py > pylint-report.json || true
      continue-on-error: true
    
    - name: Upload analysis results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: code-analysis-reports
        path: |
          bandit-report.json
          safety-report.json
          pylint-report.json

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python
        queries: security-and-quality
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2